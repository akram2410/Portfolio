{"version":3,"sources":["avatar.png","components/Navbar.js","components/Header.js","components/index.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","menuSlideContainer","width","background","height","avatar","display","margin","spacing","listItem","color","menuItems","listIcon","listText","linkPath","AssignmentInd","Apps","ContactMail","Navbar","slider","classes","useState","right","state","setState","toggleSlider","open","Box","component","AppBar","position","style","Toolbar","IconButton","onClick","ArrowBack","Typography","variant","anchor","onClose","className","Avatar","src","alt","Divider","List","map","item","key","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","title","subtitle","typedContainer","top","left","transform","textAlign","zIndex","Header","Grid","container","justify","strings","typeSpeed","backspeed","loop","particlesCanva","Home","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","size","random","anim","speed","size_min","sync","opacity","opacity_min","mainContainer","timeLine","padding","content","border","clear","breakpoints","up","timeLineItem","borderBottom","borderStyle","borderColor","borderWidth","float","timeLineYear","maxWidth","fontSize","lineHeight","heading","textTransform","subheading","Resume","align","App","CssBaseline","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ceea89ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.7c8e5f50.png\";","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  ListItem,\r\n  IconButton,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Avatar,\r\n  Divider,\r\n  List,\r\n  Typography,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport MobileRightMenuSlider from \"@material-ui/core/Drawer\";\r\n\r\nimport {\r\n  ArrowBack,\r\n  AssignmentInd,\r\n  Home,\r\n  Apps,\r\n  ContactMail\r\n} from \"@material-ui/icons\";\r\nimport avatar from \"../avatar.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n//CSS STYLES\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menuSlideContainer: {\r\n    width: 250,\r\n    background: \"#511\",\r\n    height: \"100%\"\r\n  },\r\n  avatar: {\r\n    display: \"block\",\r\n    margin: \"0.5rem auto\",\r\n    width: theme.spacing(13),\r\n    height: theme.spacing(13)\r\n  },\r\n  listItem: {\r\n    color: \"tan\"\r\n  }\r\n}));\r\n\r\nconst menuItems = [\r\n  {\r\n    listIcon: <Home />,\r\n    listText: \"Home\",\r\n    linkPath: \"/\"\r\n  },\r\n  {\r\n    listIcon: <AssignmentInd />,\r\n    listText: \"Resume\",\r\n    linkPath: \"/resume\"\r\n  },\r\n  {\r\n    listIcon: <Apps />,\r\n    listText: \"PortFolio\"\r\n  },\r\n  {\r\n    listIcon: <ContactMail />,\r\n    listText: \"Contact\"\r\n  }\r\n];\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    right: false\r\n  });\r\n\r\n  const toggleSlider = (slider, open) => () => {\r\n    setState({ ...state, [slider]: open });\r\n  };\r\n\r\n  const sideList = slider => (\r\n    <Box\r\n      className={classes.menuSlideContainer}\r\n      component=\"div\"\r\n      onClick={toggleSlider(slider, false)}\r\n    >\r\n      <Avatar className={classes.avatar} src={avatar} alt=\"Mohammad Akram\" />\r\n      <Divider />\r\n      <List>\r\n        {menuItems.map((item, key) => (\r\n          <ListItem button component={Link} to={item.linkPath} key={key}>\r\n            <ListItemIcon className={classes.listItem}>\r\n              {item.listIcon}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              className={classes.listItem}\r\n              primary={item.listText}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"nav\">\r\n        <AppBar position=\"static\" style={{ background: \"#222\" }}>\r\n          <Toolbar>\r\n            <IconButton onClick={toggleSlider(\"right\", true)}>\r\n              <ArrowBack style={{ color: \"tomato\" }}></ArrowBack>\r\n            </IconButton>\r\n            <Typography variant=\"h5\" style={{ color: \"tan\" }}>\r\n              Portfolio\r\n            </Typography>\r\n            <MobileRightMenuSlider\r\n              anchor=\"right\"\r\n              onClose={toggleSlider(\"right\", false)}\r\n              open={state.right}\r\n            >\r\n              {sideList(\"right\")}\r\n            </MobileRightMenuSlider>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Typography, Box, Grid, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport avatar from \"../avatar.png\";\r\nimport Typed from \"react-typed\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    width: theme.spacing(15),\r\n    height: theme.spacing(15),\r\n    margin: theme.spacing(1)\r\n  },\r\n  title: {\r\n    color: \"tomato\"\r\n  },\r\n  subtitle: {\r\n    color: \"tan\"\r\n  },\r\n  typedContainer: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n    zIndex: 1\r\n  }\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.typedContainer}>\r\n      <Grid container justify=\"center\">\r\n        <Avatar className={classes.avatar} src={avatar} alt=\"Mohammad Akram\" />\r\n      </Grid>\r\n\r\n      <Typography variant=\"h4\" className={classes.title}>\r\n        <Typed strings={[\"Akram Mohammad\"]} typeSpeed={40} />\r\n      </Typography>\r\n      <Typography variant=\"h5\" className={classes.subtitle}>\r\n        <Typed\r\n          strings={[\"Javascript\", \"Reactjs\", \"Redux\"]}\r\n          typeSpeed={40}\r\n          backspeed={60}\r\n          loop\r\n        />\r\n      </Typography>\r\n      <br />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Header from \"./Header\";\r\nimport Particles from \"react-particles-js\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  particlesCanva: {\r\n    position: \"absolute\"\r\n  }\r\n});\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Header />\r\n      <Particles\r\n        canvasClassName={classes.particlesCanva}\r\n        params={{\r\n          particles: {\r\n            number: { value: 45, density: { enable: true }, value_area: 900 }\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n            stroke: {\r\n              width: 1,\r\n              color: \"tomato\"\r\n            }\r\n          },\r\n          size: {\r\n            value: 8,\r\n            random: true,\r\n            anim: {\r\n              enable: true,\r\n              speed: 6,\r\n              size_min: 0.1,\r\n              sync: true\r\n            }\r\n          },\r\n          opacity: {\r\n            value: 1,\r\n            random: true,\r\n            anim: {\r\n              enable: true,\r\n              speed: 1,\r\n              opacity_min: 0.1,\r\n              sync: true\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  mainContainer: {\r\n    background: \"#233\"\r\n  },\r\n  timeLine: {\r\n    position: \"relative\",\r\n    padding: \"1rem\",\r\n    margin: \"0 auto\",\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      height: \"100%\",\r\n      border: \"1px solid tan\",\r\n      right: \"40px\",\r\n      top: 0\r\n    },\r\n    \"&:after\": {\r\n      content: \"''\",\r\n      display: \"table\",\r\n      clear: \"both\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: \"2rem\",\r\n      \"&:before\": {\r\n        left: \"calc(50% - 1px)\",\r\n        right: \"auto\"\r\n      }\r\n    }\r\n  },\r\n  timeLineItem: {\r\n    padding: \"1rem\",\r\n    borderBottom: \"2px solid tan\",\r\n    position: \"relative\",\r\n    margin: \"1rem 3rem 1rem 1rem\",\r\n    clear: \"both\",\r\n    \"&:after\": {\r\n      content: \"''\",\r\n      position: \"absolute\"\r\n    },\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      right: \"-0.625rem\",\r\n      top: \"calc(50% - 5px)\",\r\n      borderStyle: \"solid\",\r\n      borderColor: \"tomato tomato transparent transparent\",\r\n      borderWidth: \"0.625rem\",\r\n      transform: \"rotate(45deg)\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"44%\",\r\n      margin: \"1rem\",\r\n      \"&:nth-of-type(2n)\": {\r\n        float: \"right\",\r\n        margin: \"1rem\",\r\n        borderColor: \"tan\"\r\n      },\r\n      \"&:nth-of-type(2n):before\": {\r\n        right: \"auto\",\r\n        left: \"-0.625rem\",\r\n        borderColor: \"transparent transparent tomato tomato\"\r\n      }\r\n    }\r\n  },\r\n  timeLineYear: {\r\n    textAlign: \"center\",\r\n    maxWidth: \"9.375rem\",\r\n    margin: \"0 3rem 0 auto\",\r\n    fontSize: \"1.8rem\",\r\n    background: \"tomato\",\r\n    color: \"white\",\r\n    lineHeight: 1,\r\n    padding: \"0.5rem 0 1rem\",\r\n    \"&:before\": {\r\n      display: \"none\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      textAlign: \"center\",\r\n      margin: \"0 auto\",\r\n      \"&:nth-of-type(2n)\": {\r\n        float: \"none\",\r\n        margin: \"0 auto\"\r\n      },\r\n      \"&:nth-of-type(2n):before\": {\r\n        display: \"none\"\r\n      }\r\n    }\r\n  },\r\n  heading: {\r\n    color: \"tomato\",\r\n    padding: \"3rem 0\",\r\n    textTransform: \"uppercase\"\r\n  },\r\n  subheading: {\r\n    color: \"white\",\r\n    padding: \"0\",\r\n    textTransform: \"uppercase\"\r\n  }\r\n}));\r\nconst Resume = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Box component=\"header\" className={classes.mainContainer}>\r\n        <Typography variant=\"h4\" align=\"center\" className={classes.heading}>\r\n          work experience\r\n        </Typography>\r\n\r\n        <Box component=\"div\" className={classes.timeLine}>\r\n          <Typography\r\n            className={`${classes.timeLineYear} ${classes.timeLineItem}`}\r\n            variant=\"h2\"\r\n          >\r\n            2013-2016\r\n          </Typography>\r\n          <Box component=\"div\" className={classes.timeLineItem}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              className={classes.subheading}\r\n            >\r\n              Java, IVR\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n              style={{ color: \"tomato\" }}\r\n            >\r\n              HCL Technologies\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              style={{ color: \"tan\" }}\r\n            >\r\n              Software Engineer\r\n            </Typography>\r\n          </Box>\r\n          <Typography\r\n            className={`${classes.timeLineYear} ${classes.timeLineItem}`}\r\n            variant=\"h2\"\r\n          >\r\n            2016-2020\r\n          </Typography>\r\n          <Box component=\"div\" className={classes.timeLineItem}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              className={classes.subheading}\r\n            >\r\n              Javascript, React\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n              style={{ color: \"tomato\" }}\r\n            >\r\n              Infosys\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              style={{ color: \"tan\" }}\r\n            >\r\n              Technology analyst\r\n            </Typography>\r\n          </Box>\r\n          <Typography\r\n            className={`${classes.timeLineYear} ${classes.timeLineItem}`}\r\n            variant=\"h2\"\r\n          >\r\n            2020\r\n          </Typography>\r\n          <Box component=\"div\" className={classes.timeLineItem}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              className={classes.subheading}\r\n            >\r\n              Reactjs\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n              style={{ color: \"tomato\" }}\r\n            >\r\n              Persistent Systems\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              style={{ color: \"tan\" }}\r\n            >\r\n              Team Lead\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/index\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Resume from \"./components/Resume\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/resume\" component={Resume} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}